package br.com.movieapp.movie_popula_feature_data_repository

import androidx.paging.Pager
import androidx.paging.PagingConfig
import androidx.paging.PagingData
import androidx.paging.PagingSource
import br.com.movieapp.modelDomain.Movie
import br.com.movieapp.movie_popula_feature_data_domain_repository.MoviePopularRepository
import br.com.movieapp.movie_popula_feature_data_domain_source.MoviePopularRemoteDataSource
import br.com.movieapp.paging.MoviePagingSource
import kotlinx.coroutines.flow.Flow

class MoviePopularRepositoryImpl constructor( // Essa classe implementa a interface MoviePopularRepository
    private val remoteDataSource: MoviePopularRemoteDataSource // Essa classe recebe o remoteDataSource como par√¢metro
) : MoviePopularRepository { // Essa classe implementa a interface MoviePopularRepository
    override fun getPopularMovies(): PagingSource<Int, Movie> { // Essa fun√ß√£o retorna um Flow de PagingData de Movie
       return MoviePagingSource(remoteDataSource)
    }

}
// Essa classe serve para implementar a l√≥gica de neg√≥cios da aplica√ß√£o, que √© a l√≥gica que define como os dados s√£o processados e manipulados

/*
üì¶ O que essa classe faz?

Imagina que o aplicativo √© uma locadora de filmes online, e tem um lugar na internet com uma lista
 gigante de filmes populares (isso √© o que chamamos de fonte remota ou remoteDataSource).

Mas‚Ä¶ se voc√™ tentar pegar todos os filmes de uma vez, o celular pode ficar lento. Ent√£o a gente faz o seguinte:
üé≤ Essa classe funciona como:

Um pegador de filmes aos pouquinhos, tipo p√°ginas de um livro.

üí° Explicando passo a passo:

A classe se chama MoviePopularRepositoryImpl ‚Üí um nome chique pra dizer que ela √© quem pega os filmes populares.

Ela usa um ajudante especial chamado remoteDataSource ‚Üí que sabe onde os filmes est√£o guardados na internet.

A fun√ß√£o getPopularMovies diz:

‚ÄúMe d√° os filmes em pedacinhos, por p√°gina, pra n√£o travar tudo de uma vez.‚Äù

Pra isso, ela usa uma ferramenta m√°gica chamada Pager que:

Divide os filmes em p√°ginas (como p√°ginas de um caderno).

Pega essas p√°ginas uma por vez.

E devolve tudo em forma de um fluxo de filmes (o Flow<PagingData<Movie>>).

üß† Em resumo bem simples:

Essa classe:

Vai buscar os filmes populares de pouquinho em pouquinho, do jeito certo, e entrega eles
organizadinhos pro app mostrar na tela. Ela √© tipo um entregador que traz uma caixa de cada vez, em
vez de trazer tudo de uma vez s√≥ e deixar cair no ch√£o.*/
